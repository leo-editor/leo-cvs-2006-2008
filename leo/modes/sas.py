# Leo colorizer control file for sas mode.
# This file is in the public domain.

# Properties for sas mode.
properties = {}

# Attributes dict for sas_main ruleset.
sas_main_attributes_dict = {
	"default": "null",
	"digit_re": "",
	"highlight_digits": "false",
	"ignore_case": "true",
	"no_word_sep": "",
}

# Dictionary of attributes dictionaries for sas mode.
attributesDictDict = {
	"sas_main": sas_main_attributes_dict,
}

# Keywords dict for sas_main ruleset.
sas_main_keywords_dict = {
	"$ascii": "keyword2",
	"$binary": "keyword2",
	"$cb": "keyword2",
	"$char": "keyword2",
	"$charzb": "keyword2",
	"$ebcdic": "keyword2",
	"$hex": "keyword2",
	"$octal": "keyword2",
	"$varying": "keyword2",
	"%bquote": "keyword2",
	"%do": "keyword2",
	"%else": "keyword2",
	"%end": "keyword2",
	"%eval": "keyword2",
	"%global": "keyword2",
	"%goto": "keyword2",
	"%if": "keyword2",
	"%inc": "keyword2",
	"%include": "keyword2",
	"%index": "keyword2",
	"%input": "keyword2",
	"%length": "keyword2",
	"%let": "keyword2",
	"%local": "keyword2",
	"%macro": "keyword2",
	"%mend": "keyword2",
	"%nrbquote": "keyword2",
	"%nrquote": "keyword2",
	"%nrstr": "keyword2",
	"%put": "keyword2",
	"%qscan": "keyword2",
	"%quote": "keyword2",
	"%run": "keyword2",
	"%substr": "keyword2",
	"%sysexec": "keyword2",
	"%then": "keyword2",
	"%until": "keyword2",
	"%while": "keyword2",
	"%window": "keyword2",
	"=data": "keyword2",
	"_all_": "keyword2",
	"_character_": "keyword2",
	"_cmd_": "keyword2",
	"_error_": "keyword2",
	"_i_": "keyword2",
	"_infile_": "keyword2",
	"_last_": "keyword2",
	"_msg_": "keyword2",
	"_n_": "keyword2",
	"_null_": "keyword2",
	"_numeric_": "keyword2",
	"_temporary_": "keyword2",
	"_type_": "keyword2",
	"abort": "keyword2",
	"add": "keyword2",
	"adjrsq": "keyword2",
	"and": "keyword2",
	"array": "keyword2",
	"attrib": "keyword2",
	"backward": "keyword2",
	"binary": "keyword2",
	"blocksize": "keyword2",
	"by": "keyword2",
	"bz": "keyword2",
	"call": "keyword2",
	"cards": "keyword2",
	"cards4": "keyword2",
	"char": "keyword2",
	"class": "keyword2",
	"col": "keyword2",
	"collin": "keyword2",
	"column": "keyword2",
	"comma": "keyword2",
	"commax": "keyword2",
	"create": "keyword2",
	"data": "keyword2",
	"data=": "keyword2",
	"date": "keyword2",
	"datetime": "keyword2",
	"ddmmyy": "keyword2",
	"decending": "keyword2",
	"define": "keyword2",
	"delete": "keyword2",
	"delimiter": "keyword2",
	"display": "keyword2",
	"dlm": "keyword2",
	"do": "keyword2",
	"drop": "keyword2",
	"else": "keyword2",
	"end": "keyword2",
	"endsas": "keyword2",
	"eof": "keyword2",
	"eov": "keyword2",
	"eq": "keyword2",
	"errors": "keyword2",
	"file": "keyword2",
	"filename": "keyword2",
	"filevar": "keyword2",
	"first.": "keyword2",
	"firstobs": "keyword2",
	"footnote": "keyword2",
	"footnote1": "keyword2",
	"footnote2": "keyword2",
	"footnote3": "keyword2",
	"form": "keyword2",
	"format": "keyword2",
	"formchar": "keyword2",
	"formdelim": "keyword2",
	"formdlim": "keyword2",
	"forward": "keyword2",
	"from": "keyword2",
	"go": "keyword2",
	"group": "keyword2",
	"gt": "keyword2",
	"hbar": "keyword2",
	"hex": "keyword2",
	"hpct": "keyword2",
	"hvar": "keyword2",
	"ib": "keyword2",
	"id": "keyword2",
	"ieee": "keyword2",
	"if": "keyword2",
	"in": "keyword2",
	"infile": "keyword2",
	"informat": "keyword2",
	"input": "keyword2",
	"inr": "keyword2",
	"join": "keyword2",
	"julian": "keyword2",
	"keep": "keyword2",
	"label": "keyword2",
	"lag": "keyword2",
	"last.": "keyword2",
	"le": "keyword2",
	"lib": "keyword2",
	"libname": "keyword2",
	"line": "keyword2",
	"linesize": "keyword2",
	"link": "keyword2",
	"list": "keyword2",
	"lostcard": "keyword2",
	"lrecl": "keyword2",
	"ls": "keyword2",
	"macro": "keyword2",
	"macrogen": "keyword2",
	"maxdec": "keyword2",
	"maxr": "keyword2",
	"median": "keyword2",
	"memtype": "keyword2",
	"merge": "keyword2",
	"merror": "keyword2",
	"missove": "keyword2",
	"mlogic": "keyword2",
	"mmddyy": "keyword2",
	"mode": "keyword2",
	"model": "keyword2",
	"monyy": "keyword2",
	"mprint": "keyword2",
	"mrecall": "keyword2",
	"ne": "keyword2",
	"new": "keyword2",
	"no": "keyword2",
	"nobs": "keyword2",
	"nocenter": "keyword2",
	"nocum": "keyword2",
	"nodate": "keyword2",
	"nodup": "keyword2",
	"nodupkey": "keyword2",
	"noint": "keyword2",
	"nonumber": "keyword2",
	"nopad": "keyword2",
	"noprint": "keyword2",
	"norow": "keyword2",
	"not": "keyword2",
	"notitle": "keyword2",
	"notitles": "keyword2",
	"noxsync": "keyword2",
	"noxwait": "keyword2",
	"number": "keyword2",
	"nway": "keyword2",
	"obs": "keyword2",
	"option": "keyword2",
	"options": "keyword2",
	"or": "keyword2",
	"order": "keyword2",
	"otherwise": "keyword2",
	"out": "keyword2",
	"output": "keyword2",
	"over": "keyword2",
	"pad": "keyword2",
	"pad2": "keyword2",
	"pagesize": "keyword2",
	"pd": "keyword2",
	"percent": "keyword2",
	"pib": "keyword2",
	"pk": "keyword2",
	"point": "keyword2",
	"position": "keyword2",
	"printer": "keyword2",
	"proc": "keyword2",
	"ps": "keyword2",
	"put": "keyword2",
	"quit": "keyword2",
	"r": "keyword2",
	"rb": "keyword2",
	"recfm": "keyword2",
	"reg": "keyword2",
	"regr": "keyword2",
	"rename": "keyword2",
	"replace": "keyword2",
	"retain": "keyword2",
	"return": "keyword2",
	"reuse": "keyword2",
	"rsquare": "keyword2",
	"run": "keyword2",
	"sasautos": "keyword2",
	"scan": "keyword2",
	"select": "keyword2",
	"selection": "keyword2",
	"serror": "keyword2",
	"set": "keyword2",
	"simple": "keyword2",
	"sle": "keyword2",
	"sls": "keyword2",
	"start": "keyword2",
	"stdin": "keyword2",
	"stop": "keyword2",
	"stopover": "keyword2",
	"substr": "keyword2",
	"symbol": "keyword2",
	"symbolgen": "keyword2",
	"t": "keyword2",
	"table": "keyword2",
	"tables": "keyword2",
	"then": "keyword2",
	"title": "keyword2",
	"title1": "keyword2",
	"title2": "keyword2",
	"title3": "keyword2",
	"title4": "keyword2",
	"title5": "keyword2",
	"to": "keyword2",
	"tol": "keyword2",
	"unformatted": "keyword2",
	"until": "keyword2",
	"update": "keyword2",
	"value": "keyword2",
	"var": "keyword2",
	"when": "keyword2",
	"where": "keyword2",
	"while": "keyword2",
	"window": "keyword2",
	"work": "keyword2",
	"x": "keyword2",
	"xsync": "keyword2",
	"xwait": "keyword2",
	"yes": "keyword2",
	"yymmdd": "keyword2",
}

# Dictionary of keywords dictionaries for sas mode.
keywordsDictDict = {
	"sas_main": sas_main_keywords_dict,
}

# Rules for sas_main ruleset.

def rule0(colorer, s, i):
    return colorer.match_span(s, i, kind="comment1", begin="/*", end="*/",
        at_line_start=False, at_whitespace_end=False, at_word_start=False,
        delegate="",exclude_match=False,
        no_escape=False, no_line_break=False, no_word_break=False)

def rule1(colorer, s, i):
    return colorer.match_span(s, i, kind="literal1", begin="'", end="'",
        at_line_start=False, at_whitespace_end=False, at_word_start=False,
        delegate="",exclude_match=False,
        no_escape=False, no_line_break=False, no_word_break=False)

def rule2(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="=",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule3(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="<",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule4(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq=">",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule5(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="_",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule6(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="|",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule7(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="~",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule8(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="^",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule9(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="@",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule10(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="?",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule11(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="/",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule12(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq=".",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule13(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="-",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule14(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="+",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule15(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="*",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule16(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="!",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule17(colorer, s, i):
    return colorer.match_keywords(s, i)

# Rules dict for main ruleset.
rulesDict1 = {
	"!": [rule16,],
	"$": [rule17,],
	"%": [rule17,],
	"'": [rule1,],
	"*": [rule15,],
	"+": [rule14,],
	"-": [rule13,],
	".": [rule12,rule17,],
	"/": [rule0,rule11,],
	"0": [rule17,],
	"1": [rule17,],
	"2": [rule17,],
	"3": [rule17,],
	"4": [rule17,],
	"5": [rule17,],
	"6": [rule17,],
	"7": [rule17,],
	"8": [rule17,],
	"9": [rule17,],
	"<": [rule3,],
	"=": [rule2,rule17,],
	">": [rule4,],
	"?": [rule10,],
	"@": [rule9,rule17,],
	"A": [rule17,],
	"B": [rule17,],
	"C": [rule17,],
	"D": [rule17,],
	"E": [rule17,],
	"F": [rule17,],
	"G": [rule17,],
	"H": [rule17,],
	"I": [rule17,],
	"J": [rule17,],
	"K": [rule17,],
	"L": [rule17,],
	"M": [rule17,],
	"N": [rule17,],
	"O": [rule17,],
	"P": [rule17,],
	"Q": [rule17,],
	"R": [rule17,],
	"S": [rule17,],
	"T": [rule17,],
	"U": [rule17,],
	"V": [rule17,],
	"W": [rule17,],
	"X": [rule17,],
	"Y": [rule17,],
	"Z": [rule17,],
	"^": [rule8,],
	"_": [rule5,rule17,],
	"a": [rule17,],
	"b": [rule17,],
	"c": [rule17,],
	"d": [rule17,],
	"e": [rule17,],
	"f": [rule17,],
	"g": [rule17,],
	"h": [rule17,],
	"i": [rule17,],
	"j": [rule17,],
	"k": [rule17,],
	"l": [rule17,],
	"m": [rule17,],
	"n": [rule17,],
	"o": [rule17,],
	"p": [rule17,],
	"q": [rule17,],
	"r": [rule17,],
	"s": [rule17,],
	"t": [rule17,],
	"u": [rule17,],
	"v": [rule17,],
	"w": [rule17,],
	"x": [rule17,],
	"y": [rule17,],
	"z": [rule17,],
	"|": [rule6,],
	"~": [rule7,],
}

# x.rulesDictDict for sas mode.
rulesDictDict = {
	"sas_main": rulesDict1,
}

# Import dict for sas mode.
importDict = {}

