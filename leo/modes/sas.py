# Leo colorizer control file for sas mode.
# This file is in the public domain.

# Properties for sas mode.
properties = {}

# Keywords dict for sas_main ruleset.
sas_main_keywords_dict = {
	"$ASCII": "keyword2",
	"$BINARY": "keyword2",
	"$CB": "keyword2",
	"$CHAR": "keyword2",
	"$CHARZB": "keyword2",
	"$EBCDIC": "keyword2",
	"$HEX": "keyword2",
	"$OCTAL": "keyword2",
	"$VARYING": "keyword2",
	"%BQUOTE": "keyword2",
	"%DO": "keyword2",
	"%ELSE": "keyword2",
	"%END": "keyword2",
	"%EVAL": "keyword2",
	"%GOTO": "keyword2",
	"%Global": "keyword2",
	"%IF": "keyword2",
	"%INC": "keyword2",
	"%INCLUDE": "keyword2",
	"%INDEX": "keyword2",
	"%INPUT": "keyword2",
	"%LENGTH": "keyword2",
	"%LET": "keyword2",
	"%LOCAL": "keyword2",
	"%MACRO": "keyword2",
	"%MEND": "keyword2",
	"%NRBQUOTE": "keyword2",
	"%NRQUOTE": "keyword2",
	"%NRSTR": "keyword2",
	"%PUT": "keyword2",
	"%QSCAN": "keyword2",
	"%Quote": "keyword2",
	"%RUN": "keyword2",
	"%SUBSTR": "keyword2",
	"%SYSEXEC": "keyword2",
	"%THEN": "keyword2",
	"%UNTIL": "keyword2",
	"%WHILE": "keyword2",
	"%WINDOW": "keyword2",
	"=DATA": "keyword2",
	"ABORT": "keyword2",
	"ADD": "keyword2",
	"ADJRSQ": "keyword2",
	"AND": "keyword2",
	"ARRAY": "keyword2",
	"ATTRIB": "keyword2",
	"BACKWARD": "keyword2",
	"BINARY": "keyword2",
	"BLOCKSIZE": "keyword2",
	"BY": "keyword2",
	"BZ": "keyword2",
	"CALL": "keyword2",
	"CARDS": "keyword2",
	"CARDS4": "keyword2",
	"CHAR": "keyword2",
	"CLASS": "keyword2",
	"COL": "keyword2",
	"COLLIN": "keyword2",
	"COLUMN": "keyword2",
	"COMMA": "keyword2",
	"COMMAX": "keyword2",
	"CREATE": "keyword2",
	"DATA": "keyword2",
	"DATA=": "keyword2",
	"DATE": "keyword2",
	"DATETIME": "keyword2",
	"DDMMYY": "keyword2",
	"DECENDING": "keyword2",
	"DEFINE": "keyword2",
	"DELETE": "keyword2",
	"DELIMITER": "keyword2",
	"DISPLAY": "keyword2",
	"DLM": "keyword2",
	"DO": "keyword2",
	"DROP": "keyword2",
	"ELSE": "keyword2",
	"END": "keyword2",
	"ENDSAS": "keyword2",
	"EOF": "keyword2",
	"EOV": "keyword2",
	"EQ": "keyword2",
	"ERRORS": "keyword2",
	"FILE": "keyword2",
	"FILENAME": "keyword2",
	"FILEVAR": "keyword2",
	"FIRST.": "keyword2",
	"FIRSTOBS": "keyword2",
	"FOOTNOTE": "keyword2",
	"FOOTNOTE1": "keyword2",
	"FOOTNOTE2": "keyword2",
	"FOOTNOTE3": "keyword2",
	"FORM": "keyword2",
	"FORMAT": "keyword2",
	"FORMCHAR": "keyword2",
	"FORMDELIM": "keyword2",
	"FORMDLIM": "keyword2",
	"FORWARD": "keyword2",
	"FROM": "keyword2",
	"GO": "keyword2",
	"GROUP": "keyword2",
	"GT": "keyword2",
	"HBAR": "keyword2",
	"HEX": "keyword2",
	"HPCT": "keyword2",
	"HVAR": "keyword2",
	"IB": "keyword2",
	"ID": "keyword2",
	"IEEE": "keyword2",
	"IF": "keyword2",
	"IN": "keyword2",
	"INFILE": "keyword2",
	"INFORMAT": "keyword2",
	"INPUT": "keyword2",
	"INR": "keyword2",
	"JOIN": "keyword2",
	"JULIAN": "keyword2",
	"KEEP": "keyword2",
	"LABEL": "keyword2",
	"LAG": "keyword2",
	"LAST.": "keyword2",
	"LE": "keyword2",
	"LIB": "keyword2",
	"LIBNAME": "keyword2",
	"LINE": "keyword2",
	"LINESIZE": "keyword2",
	"LINK": "keyword2",
	"LIST": "keyword2",
	"LOSTCARD": "keyword2",
	"LRECL": "keyword2",
	"LS": "keyword2",
	"MACRO": "keyword2",
	"MACROGEN": "keyword2",
	"MAXDEC": "keyword2",
	"MAXR": "keyword2",
	"MEDIAN": "keyword2",
	"MEMTYPE": "keyword2",
	"MERGE": "keyword2",
	"MERROR": "keyword2",
	"MISSOVE": "keyword2",
	"MLOGIC": "keyword2",
	"MMDDYY": "keyword2",
	"MODE": "keyword2",
	"MODEL": "keyword2",
	"MONYY": "keyword2",
	"MPRINT": "keyword2",
	"MRECALL": "keyword2",
	"NE": "keyword2",
	"NEW": "keyword2",
	"NO": "keyword2",
	"NOBS": "keyword2",
	"NOCENTER": "keyword2",
	"NOCUM": "keyword2",
	"NODATE": "keyword2",
	"NODUP": "keyword2",
	"NODUPKEY": "keyword2",
	"NOINT": "keyword2",
	"NONUMBER": "keyword2",
	"NOPAD": "keyword2",
	"NOPRINT": "keyword2",
	"NOROW": "keyword2",
	"NOT": "keyword2",
	"NOTITLE": "keyword2",
	"NOTITLES": "keyword2",
	"NOXSYNC": "keyword2",
	"NOXWAIT": "keyword2",
	"NUMBER": "keyword2",
	"NWAY": "keyword2",
	"OBS": "keyword2",
	"OPTION": "keyword2",
	"OPTIONS": "keyword2",
	"OR": "keyword2",
	"ORDER": "keyword2",
	"OTHERWISE": "keyword2",
	"OUT": "keyword2",
	"OUTPUT": "keyword2",
	"OVER": "keyword2",
	"PAD": "keyword2",
	"PAD2": "keyword2",
	"PAGESIZE": "keyword2",
	"PD": "keyword2",
	"PERCENT": "keyword2",
	"PIB": "keyword2",
	"PK": "keyword2",
	"POINT": "keyword2",
	"POSITION": "keyword2",
	"PRINTER": "keyword2",
	"PROC": "keyword2",
	"PS": "keyword2",
	"PUT": "keyword2",
	"QUIT": "keyword2",
	"R": "keyword2",
	"RB": "keyword2",
	"RECFM": "keyword2",
	"REG": "keyword2",
	"REGR": "keyword2",
	"RENAME": "keyword2",
	"REPLACE": "keyword2",
	"RETAIN": "keyword2",
	"RETURN": "keyword2",
	"REUSE": "keyword2",
	"RSQUARE": "keyword2",
	"RUN": "keyword2",
	"SASAUTOS": "keyword2",
	"SCAN": "keyword2",
	"SELECT": "keyword2",
	"SELECTION": "keyword2",
	"SERROR": "keyword2",
	"SET": "keyword2",
	"SIMPLE": "keyword2",
	"SLE": "keyword2",
	"SLS": "keyword2",
	"START": "keyword2",
	"STDIN": "keyword2",
	"STOP": "keyword2",
	"STOPOVER": "keyword2",
	"SUBSTR": "keyword2",
	"SYMBOL": "keyword2",
	"SYMBOLGEN": "keyword2",
	"T": "keyword2",
	"TABLE": "keyword2",
	"TABLES": "keyword2",
	"THEN": "keyword2",
	"TITLE": "keyword2",
	"TITLE1": "keyword2",
	"TITLE2": "keyword2",
	"TITLE3": "keyword2",
	"TITLE4": "keyword2",
	"TITLE5": "keyword2",
	"TO": "keyword2",
	"TOL": "keyword2",
	"UNFORMATTED": "keyword2",
	"UNTIL": "keyword2",
	"UPDATE": "keyword2",
	"VALUE": "keyword2",
	"VAR": "keyword2",
	"WHEN": "keyword2",
	"WHERE": "keyword2",
	"WHILE": "keyword2",
	"WINDOW": "keyword2",
	"WORK": "keyword2",
	"X": "keyword2",
	"XSYNC": "keyword2",
	"XWAIT": "keyword2",
	"YES": "keyword2",
	"YYMMDD": "keyword2",
	"_ALL_": "keyword2",
	"_CHARACTER_": "keyword2",
	"_CMD_": "keyword2",
	"_ERROR_": "keyword2",
	"_INFILE_": "keyword2",
	"_I_": "keyword2",
	"_LAST_": "keyword2",
	"_MSG_": "keyword2",
	"_NULL_": "keyword2",
	"_NUMERIC_": "keyword2",
	"_N_": "keyword2",
	"_TEMPORARY_": "keyword2",
	"_TYPE_": "keyword2",
}

# Dictionary of keywords dictionaries for sas mode.
keywordsDictDict = {
	"sas_main": sas_main_keywords_dict,
}

# Rules for sas_main ruleset.

def rule0(colorer, s, i):
    return colorer.match_span(s, i, kind="comment1", begin="/*", end="*/",
        at_line_start=False, at_whitespace_end=False, at_word_start=False,
        delegate="",exclude_match=False,
        no_escape=False, no_line_break=False, no_word_break=False)

def rule1(colorer, s, i):
    return colorer.match_span(s, i, kind="literal1", begin="'", end="'",
        at_line_start=False, at_whitespace_end=False, at_word_start=False,
        delegate="",exclude_match=False,
        no_escape=False, no_line_break=False, no_word_break=False)

def rule2(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="=",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule3(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="<",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule4(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq=">",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule5(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="_",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule6(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="|",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule7(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="~",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule8(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="^",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule9(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="@",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule10(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="?",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule11(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="/",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule12(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq=".",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule13(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="-",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule14(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="+",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule15(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="*",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule16(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="!",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule17(colorer, s, i):
    return colorer.match_keywords(s, i)

# Rules dict for main ruleset.
rulesDict1 = {
	"!": [rule16,],
	"'": [rule1,],
	"*": [rule15,],
	"+": [rule14,],
	"-": [rule13,],
	".": [rule12,],
	"/": [rule0,rule11,],
	"0": [rule17,],
	"1": [rule17,],
	"2": [rule17,],
	"3": [rule17,],
	"4": [rule17,],
	"5": [rule17,],
	"6": [rule17,],
	"7": [rule17,],
	"8": [rule17,],
	"9": [rule17,],
	"<": [rule3,],
	"=": [rule2,],
	">": [rule4,],
	"?": [rule10,],
	"@": [rule9,rule17,],
	"A": [rule17,],
	"B": [rule17,],
	"C": [rule17,],
	"D": [rule17,],
	"E": [rule17,],
	"F": [rule17,],
	"G": [rule17,],
	"H": [rule17,],
	"I": [rule17,],
	"J": [rule17,],
	"K": [rule17,],
	"L": [rule17,],
	"M": [rule17,],
	"N": [rule17,],
	"O": [rule17,],
	"P": [rule17,],
	"Q": [rule17,],
	"R": [rule17,],
	"S": [rule17,],
	"T": [rule17,],
	"U": [rule17,],
	"V": [rule17,],
	"W": [rule17,],
	"X": [rule17,],
	"Y": [rule17,],
	"Z": [rule17,],
	"^": [rule8,],
	"_": [rule5,rule17,],
	"a": [rule17,],
	"b": [rule17,],
	"c": [rule17,],
	"d": [rule17,],
	"e": [rule17,],
	"f": [rule17,],
	"g": [rule17,],
	"h": [rule17,],
	"i": [rule17,],
	"j": [rule17,],
	"k": [rule17,],
	"l": [rule17,],
	"m": [rule17,],
	"n": [rule17,],
	"o": [rule17,],
	"p": [rule17,],
	"q": [rule17,],
	"r": [rule17,],
	"s": [rule17,],
	"t": [rule17,],
	"u": [rule17,],
	"v": [rule17,],
	"w": [rule17,],
	"x": [rule17,],
	"y": [rule17,],
	"z": [rule17,],
	"|": [rule6,],
	"~": [rule7,],
}

# x.rulesDictDict for sas mode.
rulesDictDict = {
	"sas_main": rulesDict1,
}

# Import dict for sas mode.
importDict = {}

