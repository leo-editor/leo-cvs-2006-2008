# Leo colorizer control file for pl-sql mode.
# This file is in the public domain.

# Properties for pl-sql mode.
properties = {
	"commentEnd": "*/",
	"commentStart": "/*",
	"lineComment": "--",
}

# Attributes dict for pl_sql_main ruleset.
pl_sql_main_attributes_dict = {
	"default": "null",
	"digit_re": "",
	"highlight_digits": "true",
	"ignore_case": "true",
	"no_word_sep": "",
}

# Dictionary of attributes dictionaries for pl_sql mode.
attributesDictDict = {
	"pl_sql_main": pl_sql_main_attributes_dict,
}

# Keywords dict for pl_sql_main ruleset.
pl_sql_main_keywords_dict = {
	"ABORT": "keyword1",
	"ABS": "keyword2",
	"ACCESS": "keyword1",
	"ACOS": "keyword2",
	"ADD": "keyword1",
	"ADD_MONTHS": "keyword2",
	"ALL": "keyword1",
	"ALTER": "keyword1",
	"AND": "keyword1",
	"ANY": "keyword1",
	"ARRAY": "keyword1",
	"ARRAYSIZE": "keyword3",
	"ARRAY_LEN": "keyword1",
	"AS": "keyword1",
	"ASC": "keyword1",
	"ASCII": "keyword2",
	"ASIN": "keyword2",
	"ASSERT": "keyword1",
	"ASSIGN": "keyword1",
	"AT": "keyword1",
	"ATAN": "keyword2",
	"ATAN2": "keyword2",
	"AUDIT": "keyword1",
	"AUTHORIZATION": "keyword1",
	"AVG": "keyword1",
	"BASE_TABLE": "keyword1",
	"BEGIN": "keyword1",
	"BETWEEN": "keyword1",
	"BINARY_INTEGER": "keyword1",
	"BODY": "keyword1",
	"BY": "keyword1",
	"CASE": "keyword1",
	"CEIL": "keyword2",
	"CHAR": "keyword1",
	"CHARTOROWID": "keyword2",
	"CHAR_BASE": "keyword1",
	"CHECK": "keyword1",
	"CHR": "keyword2",
	"CLOSE": "keyword1",
	"CLUSTER": "keyword1",
	"CLUSTERS": "keyword1",
	"COLAUTH": "keyword1",
	"COLUMN": "keyword1",
	"COMMENT": "keyword1",
	"COMMIT": "keyword1",
	"COMPRESS": "keyword1",
	"CONCAT": "keyword2",
	"CONNECT": "keyword1",
	"CONSTANT": "keyword1",
	"CONSTRAINT": "keyword1",
	"CONVERT": "keyword2",
	"COS": "keyword2",
	"COSH": "keyword2",
	"COUNT": "keyword1",
	"CREATE": "keyword1",
	"CURRENT": "keyword1",
	"CURRVAL": "keyword1",
	"CURSOR": "keyword1",
	"DATABASE": "keyword1",
	"DATA_BASE": "keyword1",
	"DATE": "keyword1",
	"DBA": "keyword1",
	"DBMS_OUTPUT": "keyword3",
	"DEBUGOFF": "keyword1",
	"DEBUGON": "keyword1",
	"DECLARE": "keyword1",
	"DECODE": "keyword2",
	"DEFAULT": "keyword1",
	"DEFINE": "keyword2",
	"DEFINITION": "keyword1",
	"DELAY": "keyword1",
	"DELETE": "keyword1",
	"DESC": "keyword1",
	"DIGITS": "keyword1",
	"DISPOSE": "keyword1",
	"DISTINCT": "keyword1",
	"DO": "keyword1",
	"DROP": "keyword1",
	"DUMP": "keyword1",
	"ELSE": "keyword1",
	"ELSIF": "keyword1",
	"ENABLE": "keyword3",
	"END": "keyword1",
	"ENTRY": "keyword1",
	"EXCEPTION": "keyword1",
	"EXCEPTION_INIT": "keyword1",
	"EXCLUSIVE": "keyword1",
	"EXISTS": "keyword1",
	"EXIT": "keyword1",
	"EXTERNAL": "keyword1",
	"FALSE": "keyword1",
	"FCLOSE": "keyword3",
	"FCLOSE_ALL": "keyword3",
	"FETCH": "keyword1",
	"FILE": "keyword1",
	"FILE_TYPE": "keyword3",
	"FLOOR": "keyword2",
	"FOPEN": "keyword3",
	"FOR": "keyword1",
	"FORM": "keyword1",
	"FROM": "keyword1",
	"FUNCTION": "keyword1",
	"GENERIC": "keyword1",
	"GOTO": "keyword1",
	"GRANT": "keyword1",
	"GREATEST": "keyword1",
	"GROUP": "keyword1",
	"HAVING": "keyword1",
	"HEXTORAW": "keyword2",
	"IDENTIFIED": "keyword1",
	"IDENTITYCOL": "keyword1",
	"IF": "keyword1",
	"IMMEDIATE": "keyword1",
	"IN": "keyword1",
	"INCREMENT": "keyword1",
	"INDEX": "keyword1",
	"INDEXES": "keyword1",
	"INDICATOR": "keyword1",
	"INITCAP": "keyword2",
	"INITIAL": "keyword1",
	"INSERT": "keyword1",
	"INSTR": "keyword2",
	"INSTRB": "keyword2",
	"INTERFACE": "keyword1",
	"INTERSECT": "keyword1",
	"INTO": "keyword1",
	"INVALID_OPERATION": "keyword3",
	"INVALID_PATH": "keyword3",
	"IS": "keyword1",
	"ISOPEN": "keyword1",
	"KEY": "keyword1",
	"LAST_DAY": "keyword2",
	"LEAST": "keyword1",
	"LENGTH": "keyword2",
	"LENGTHB": "keyword2",
	"LEVEL": "keyword1",
	"LIKE": "keyword1",
	"LIMITED": "keyword1",
	"LINESIZE": "keyword3",
	"LN": "keyword2",
	"LOCK": "keyword1",
	"LOG": "keyword2",
	"LONG": "keyword1",
	"LOOP": "keyword1",
	"LOWER": "keyword2",
	"LPAD": "keyword2",
	"LTRIM": "keyword2",
	"MATCHED": "keyword1",
	"MAX": "keyword1",
	"MAXEXTENTS": "keyword1",
	"MERGE": "keyword1",
	"MIN": "keyword1",
	"MINUS": "keyword1",
	"MLSLABEL": "keyword1",
	"MOD": "keyword2",
	"MONTHS_BETWEEN": "keyword2",
	"MORE": "keyword1",
	"NATURAL": "keyword1",
	"NATURALN": "keyword1",
	"NEW": "keyword1",
	"NEW_TIME": "keyword2",
	"NEXT": "keyword1",
	"NEXTVAL": "keyword1",
	"NEXT_DAY": "keyword2",
	"NLSSORT": "keyword2",
	"NLS_LOWER": "keyword2",
	"NLS_UPPER": "keyword2",
	"NOAUDIT": "keyword1",
	"NOCOMPRESS": "keyword1",
	"NOT": "keyword1",
	"NOTFOUND": "keyword1",
	"NOWAIT": "keyword1",
	"NSL_INITCAP": "keyword2",
	"NULL": "keyword1",
	"NUMBER": "keyword1",
	"NUMBER_BASE": "keyword1",
	"NVL": "keyword2",
	"OF": "keyword1",
	"OFF": "keyword1",
	"OFFLINE": "keyword1",
	"ON": "keyword1",
	"ONLINE": "keyword1",
	"OPEN": "keyword1",
	"OPTION": "keyword1",
	"OR": "keyword1",
	"ORDER": "keyword1",
	"ORGANIZATION": "keyword1",
	"OTHERS": "keyword1",
	"OUT": "keyword1",
	"PACKAGE": "keyword1",
	"PAGESIZE": "keyword3",
	"PARTITION": "keyword1",
	"PCTFREE": "keyword1",
	"PCTINCREASE": "keyword1",
	"POSITIVE": "keyword1",
	"POSITIVEN": "keyword1",
	"POWER": "keyword2",
	"PRAGMA": "keyword1",
	"PRIMARY": "keyword1",
	"PRIVATE": "keyword1",
	"PRIVILEGES": "keyword1",
	"PROCEDURE": "keyword1",
	"PROMPT": "keyword1",
	"PUBLIC": "keyword1",
	"PUTF": "keyword3",
	"PUT_LINE": "keyword3",
	"QUOTED_IDENTIFIER": "keyword1",
	"RAISE": "keyword1",
	"RANGE": "keyword1",
	"RAW": "keyword1",
	"RAWTOHEX": "keyword2",
	"RECORD": "keyword1",
	"REF": "keyword1",
	"RELEASE": "keyword1",
	"REMR": "keyword1",
	"RENAME": "keyword1",
	"REPLACE": "keyword2",
	"RESOURCE": "keyword1",
	"RETURN": "keyword1",
	"REVERSE": "keyword1",
	"REVOKE": "keyword1",
	"ROLLBACK": "keyword1",
	"ROUND": "keyword2",
	"ROW": "keyword1",
	"ROWID": "keyword1",
	"ROWIDTOCHAR": "keyword2",
	"ROWLABEL": "keyword1",
	"ROWNUM": "keyword1",
	"ROWS": "keyword1",
	"ROWTYPE": "keyword1",
	"RPAD": "keyword2",
	"RTRIM": "keyword2",
	"RUN": "keyword1",
	"SAVEPOINT": "keyword1",
	"SCHEMA": "keyword1",
	"SELECT": "keyword1",
	"SEPERATE": "keyword1",
	"SERVEROUTPUT": "keyword3",
	"SESSION": "keyword1",
	"SET": "keyword1",
	"SHARE": "keyword1",
	"SIGN": "keyword2",
	"SIGNTYPE": "keyword1",
	"SIN": "keyword2",
	"SINH": "keyword2",
	"SOUNDEX": "keyword2",
	"SPACE": "keyword1",
	"SPOOL": "keyword1",
	"SQL": "keyword1",
	"SQLCODE": "keyword1",
	"SQLERRM": "keyword1",
	"SQRT": "keyword2",
	"START": "keyword1",
	"STATEMENT": "keyword1",
	"STDDEV": "keyword1",
	"STORAGE": "keyword1",
	"SUBSTR": "keyword2",
	"SUBSTRB": "keyword2",
	"SUBTYPE": "keyword1",
	"SUCCESSFULL": "keyword1",
	"SUM": "keyword1",
	"SYNONYM": "keyword1",
	"SYSDATE": "keyword1",
	"TABAUTH": "keyword1",
	"TABLE": "keyword1",
	"TABLES": "keyword1",
	"TABLESPACE": "keyword1",
	"TAN": "keyword2",
	"TANH": "keyword2",
	"TASK": "keyword1",
	"TERMINATE": "keyword1",
	"THEN": "keyword1",
	"TO": "keyword1",
	"TO_CHAR": "keyword2",
	"TO_DATE": "keyword2",
	"TO_MULTIBYTE": "keyword2",
	"TO_NUMBER": "keyword2",
	"TO_SINGLE_BYTE": "keyword2",
	"TRANSLATE": "keyword2",
	"TRIGGER": "keyword1",
	"TRUE": "keyword1",
	"TRUNC": "keyword2",
	"TRUNCATE": "keyword1",
	"TYPE": "keyword1",
	"UID": "keyword1",
	"UNION": "keyword1",
	"UNIQUE": "keyword1",
	"UPDATE": "keyword1",
	"UPDATETEXT": "keyword1",
	"UPPER": "keyword2",
	"USE": "keyword1",
	"USER": "keyword1",
	"USING": "keyword1",
	"UTL_FILE": "keyword3",
	"VALIDATE": "keyword1",
	"VALUES": "keyword1",
	"VARIANCE": "keyword1",
	"VERIFY": "keyword3",
	"VIEW": "keyword1",
	"VIEWS": "keyword1",
	"WHEN": "keyword1",
	"WHENEVER": "keyword1",
	"WHERE": "keyword1",
	"WHILE": "keyword1",
	"WITH": "keyword1",
	"WORK": "keyword1",
	"WRITE": "keyword1",
	"WRITE_ERROR": "keyword3",
	"XOR": "keyword1",
	"binary": "keyword1",
	"bit": "keyword1",
	"blob": "keyword1",
	"boolean": "keyword1",
	"char": "keyword1",
	"character": "keyword1",
	"datetime": "keyword1",
	"decimal": "keyword1",
	"float": "keyword1",
	"image": "keyword1",
	"int": "keyword1",
	"integer": "keyword1",
	"money": "keyword1",
	"name": "keyword1",
	"nchar": "keyword1",
	"ntext": "keyword1",
	"numeric": "keyword1",
	"nvarchar": "keyword1",
	"pls_integer": "keyword1",
	"real": "keyword1",
	"smalldatetime": "keyword1",
	"smallint": "keyword1",
	"smallmoney": "keyword1",
	"text": "keyword1",
	"timestamp": "keyword1",
	"tinyint": "keyword1",
	"uniqueidentifier": "keyword1",
	"varbinary": "keyword1",
	"varchar": "keyword1",
	"varchar2": "keyword1",
}

# Dictionary of keywords dictionaries for pl_sql mode.
keywordsDictDict = {
	"pl_sql_main": pl_sql_main_keywords_dict,
}

# Rules for pl_sql_main ruleset.

def rule0(colorer, s, i):
    return colorer.match_span(s, i, kind="comment1", begin="/*", end="*/",
        at_line_start=False, at_whitespace_end=False, at_word_start=False,
        delegate="",exclude_match=False,
        no_escape=False, no_line_break=False, no_word_break=False)

def rule1(colorer, s, i):
    return colorer.match_span(s, i, kind="literal1", begin="'", end="'",
        at_line_start=False, at_whitespace_end=False, at_word_start=False,
        delegate="",exclude_match=False,
        no_escape=False, no_line_break=False, no_word_break=False)

def rule2(colorer, s, i):
    return colorer.match_span(s, i, kind="literal1", begin="\"", end="\"",
        at_line_start=False, at_whitespace_end=False, at_word_start=False,
        delegate="",exclude_match=False,
        no_escape=False, no_line_break=False, no_word_break=False)

def rule3(colorer, s, i):
    return colorer.match_span(s, i, kind="literal1", begin="[", end="]",
        at_line_start=False, at_whitespace_end=False, at_word_start=False,
        delegate="",exclude_match=False,
        no_escape=False, no_line_break=True, no_word_break=False)

def rule4(colorer, s, i):
    return colorer.match_eol_span(s, i, kind="comment1", seq="--",
        at_line_start=False, at_whitespace_end=False, at_word_start=False,
        delegate="", exclude_match=False)

def rule5(colorer, s, i):
    return colorer.match_eol_span(s, i, kind="comment1", seq="REM",
        at_line_start=True, at_whitespace_end=False, at_word_start=False,
        delegate="", exclude_match=False)

def rule6(colorer, s, i):
    return colorer.match_eol_span(s, i, kind="comment1", seq="REMARK",
        at_line_start=True, at_whitespace_end=False, at_word_start=False,
        delegate="", exclude_match=False)

def rule7(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="+",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule8(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="-",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule9(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="/",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule10(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="*",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule11(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="=",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule12(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq=">",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule13(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="<",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule14(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="%",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule15(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="&",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule16(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="|",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule17(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="^",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule18(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="~",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule19(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="!=",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule20(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="!>",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule21(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq="!<",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule22(colorer, s, i):
    return colorer.match_seq(s, i, kind="operator", seq=":=",
        at_line_start=False, at_whitespace_end=False, at_word_start=False, delegate="")

def rule23(colorer, s, i):
    return colorer.match_mark_previous(s, i, kind="label", pattern=":",
        at_line_start=True, at_whitespace_end=False, at_word_start=False, exclude_match=False)

def rule24(colorer, s, i):
    return colorer.match_keywords(s, i)

# Rules dict for main ruleset.
rulesDict1 = {
	"!": [rule19,rule20,rule21,],
	"\"": [rule2,],
	"%": [rule14,],
	"&": [rule15,],
	"'": [rule1,],
	"*": [rule10,],
	"+": [rule7,],
	"-": [rule4,rule8,],
	"/": [rule0,rule9,],
	"0": [rule24,],
	"1": [rule24,],
	"2": [rule24,],
	"3": [rule24,],
	"4": [rule24,],
	"5": [rule24,],
	"6": [rule24,],
	"7": [rule24,],
	"8": [rule24,],
	"9": [rule24,],
	":": [rule22,rule23,],
	"<": [rule13,],
	"=": [rule11,],
	">": [rule12,],
	"@": [rule24,],
	"A": [rule24,],
	"B": [rule24,],
	"C": [rule24,],
	"D": [rule24,],
	"E": [rule24,],
	"F": [rule24,],
	"G": [rule24,],
	"H": [rule24,],
	"I": [rule24,],
	"J": [rule24,],
	"K": [rule24,],
	"L": [rule24,],
	"M": [rule24,],
	"N": [rule24,],
	"O": [rule24,],
	"P": [rule24,],
	"Q": [rule24,],
	"R": [rule5,rule6,rule24,],
	"S": [rule24,],
	"T": [rule24,],
	"U": [rule24,],
	"V": [rule24,],
	"W": [rule24,],
	"X": [rule24,],
	"Y": [rule24,],
	"Z": [rule24,],
	"[": [rule3,],
	"^": [rule17,],
	"_": [rule24,],
	"a": [rule24,],
	"b": [rule24,],
	"c": [rule24,],
	"d": [rule24,],
	"e": [rule24,],
	"f": [rule24,],
	"g": [rule24,],
	"h": [rule24,],
	"i": [rule24,],
	"j": [rule24,],
	"k": [rule24,],
	"l": [rule24,],
	"m": [rule24,],
	"n": [rule24,],
	"o": [rule24,],
	"p": [rule24,],
	"q": [rule24,],
	"r": [rule24,],
	"s": [rule24,],
	"t": [rule24,],
	"u": [rule24,],
	"v": [rule24,],
	"w": [rule24,],
	"x": [rule24,],
	"y": [rule24,],
	"z": [rule24,],
	"|": [rule16,],
	"~": [rule18,],
}

# x.rulesDictDict for pl_sql mode.
rulesDictDict = {
	"pl_sql_main": rulesDict1,
}

# Import dict for pl_sql mode.
importDict = {}

